apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.kingja.higo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildToolsVersion '26.0.2'
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile file("higo.jks")
            storePassword "tendency2011,tdr"
            keyAlias "tendency_android.keystore"
            keyPassword "tendency2011,tdr"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildApkBy()
        }
        debug {
            minifyEnabled false
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:design:$rootProject.ext.supportVersion"
    /*jakewharton*/
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    /*multidex*/
    implementation 'com.android.support:multidex:1.0.2'
    /*debugCompile*/
    implementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //Logger
    implementation 'com.orhanobut:logger:2.1.1'
    /*glide*/
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    /*dagger2*/
    implementation 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    //RxJava,RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.4'
    implementation 'org.reactivestreams:reactive-streams:1.0.1'
    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    /*supershapeview*/
    implementation 'com.kingja.supershapeview:supershapeview:1.1.1'
    /*KingJA's Libraries*/
    implementation 'com.kingja.supershapeview:supershapeview:1.1.2'
    implementation 'com.kingja.loadsir:loadsir:1.3.5'
    /*countdownview*/
    implementation 'com.github.iwgang:countdownview:2.1.6'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation('com.airbnb.android:lottie:2.2.5') { exclude group: 'com.android.support' }
}


def buildApkBy() {
    android.applicationVariants.all { variant ->
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            def versionName=variant.versionName
            def buildDate=releaseTime()
            if ("true" == IS_JENKINS) {
                versionName=APP_VERSION
                buildDate=BUILD_DATE
            }
                apkData.outputFileName = rootProject.ext.appName + "_" +
                        versionName + "_" + buildDate + "_" + variant.buildType.name + ".apk"
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}